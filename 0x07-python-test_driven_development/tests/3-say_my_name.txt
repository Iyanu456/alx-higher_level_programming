===========================
How to use 3-say_my_name.py
===========================

This module defines a function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

	>>> say_my_name = __import__("3-say_my_name").say_my_name
	>>> say_my_name("John", "Doe")
	My name is John Doe

::

	>>> say_my_name("David Hobert", "Mark")
	My name is David Hobert Mark

The parameter ```last_name``` is optional. If no last name is provided
an empty string is printed instead

::

	>>> say_my_name("Daniel")
	My name is Daniel 

The parameter ```first_name``` and ```last_name``` must be strings
otherwise a TypeError is raised

::

	>>> say_my_name(2)
	Traceback (most recent call last):
	TypeError: first_name must be a string
	
	>>> say_my_name(6, "School")
	Traceback (most recent call last):
	TypeError: first_name must be a string

	>>> say_my_name("Betty", 10)
	Traceback (most recent call last):
	TypeError: last_name must be a string

At least one name must be provided

::

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'









